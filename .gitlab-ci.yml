image: docker:28.2.2
services:
  - name: docker:28.2.2-dind
    command: [ "--tls=false", "--mtu=1240" ]
variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  DOCKER_HOST: tcp://docker:2375
  REGISTRY_URL: "registry.nosi.cv"
  IMAGE_NAME: "igrp-process-management-backend-api"
  CI_PROJECT: "igrp"
  VERSION_TAG: "$CI_COMMIT_SHORT_SHA"
  IMAGE_NAME_FULL: "$REGISTRY_URL/$CI_PROJECT/$IMAGE_NAME"
  IMAGE_TAG: latest

stages:
  - build
  - manifest

.build-template:
  only:
    - main
  before_script:
    - apk add --no-cache curl bash
    - docker login -u "$BASE_REGISTRY_USERNAME" -p "$BASE_REGISTRY_PASSWORD" "$REGISTRY_URL"

build-jvm-arm64:
  stage: build
  extends: .build-template
  script:
    - docker buildx create --use --name amd64builder
    - docker buildx inspect --bootstrap
    - docker build -f Dockerfile --platform linux/arm64 -t "$IMAGE_NAME_FULL-jvm:arm64" --no-cache --pull --build-arg APP_BUILD_FINGERPRINT=$CI_COMMIT_SHA --push --output=type=image,name="$IMAGE_NAME_FULL-jvm:arm64",push=true .

  tags:
    - arm64
  only:
    - main

build-jvm-amd64:
  extends: .build-template
  stage: build
  script:
    - docker buildx create --use --name amd64builder
    - docker buildx inspect --bootstrap
    - docker build -f Dockerfile --platform linux/amd64 -t "$IMAGE_NAME_FULL-jvm:amd64" --no-cache --pull --build-arg APP_BUILD_FINGERPRINT=$CI_COMMIT_SHA --push --output=type=image,name="$IMAGE_NAME_FULL-jvm:amd64",push=true .
  only:
    - main

create-jvm-manifest:
  stage: manifest
  script:
    - docker login -u "$BASE_REGISTRY_USERNAME" -p "$BASE_REGISTRY_PASSWORD" "$REGISTRY_URL"
    - docker manifest create "$IMAGE_NAME_FULL-jvm:$IMAGE_TAG" --amend "$IMAGE_NAME_FULL-jvm:amd64" --amend "$IMAGE_NAME_FULL-jvm:arm64"
    - docker manifest push "$IMAGE_NAME_FULL-jvm:$IMAGE_TAG"
  needs:
    - build-jvm-amd64
    - build-jvm-arm64
  only:
    - main
